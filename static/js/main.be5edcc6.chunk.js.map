{"version":3,"sources":["components/Searchbar/Searchbar.js","service/fetchApi.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Spinner/Spinner.js","components/Modal/Modal.js","App.js","index.js"],"names":["Searchbar","state","query","handleInputChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","this","className","type","autoComplete","autoFocus","placeholder","onChange","Component","fetchPictures","searchQuery","page","pageSize","axios","get","then","data","hits","ImageGalleryItem","dataRender","showModal","setUrl","map","id","webformatURL","largeImageURL","onClick","src","alt","data-big","ImageGallery","picturesData","Button","Spinner","color","height","width","modalRoot","document","querySelector","Modal","url","handleKeydown","code","modalClose","handleOverlay","target","window","addEventListener","removeEventListener","createPortal","modalPicture","App","pictures","isLoading","searchQueryChange","console","log","options","prevState","scrollTo","top","documentElement","scrollHeight","behavior","finally","setBigPictureUrl","dir","dataset","big","toggleModal","prevProps","shouldRenederLoadMoreBtn","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"8YA8CeA,E,4MA1CbC,MAAQ,CAAEC,MAAO,I,EAEjBC,kBAAoB,SAAAC,GAClB,EAAKC,SAAS,CACZH,MAAOE,EAAEE,cAAcC,S,EAI3BC,aAAe,SAAAJ,GACbA,EAAEK,iBAEF,EAAKC,MAAMC,SAAS,EAAKV,MAAMC,OAC/B,EAAKG,SAAS,CACZH,MAAO,M,4CAIX,WAAU,IACAA,EAAUU,KAAKX,MAAfC,MAER,OACE,wBAAQW,UAAU,YAAlB,SACE,uBAAMA,UAAU,aAAaF,SAAUC,KAAKJ,aAA5C,UACE,wBAAQM,KAAK,SAASD,UAAU,oBAAhC,SACE,sBAAMA,UAAU,0BAAhB,sBAGF,uBACEA,UAAU,mBACVC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,2BACZV,MAAOL,EACPgB,SAAUN,KAAKT,6B,GAnCHgB,a,iBCSTC,EARO,SAAC,GAAmD,IAAD,IAAhDC,mBAAgD,MAAlC,GAAkC,MAA9BC,YAA8B,MAAvB,EAAuB,MAApBC,gBAAoB,MAAT,GAAS,EACvE,OAAOC,IACJC,IADI,qCAE2BJ,EAF3B,iBAE+CC,EAF/C,gBAHG,qCAGH,6DAEmHC,IAEvHG,MAAK,qBAAGC,KAAgBC,SCgBdC,G,YAlBU,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAYC,EAAf,EAAeA,UAAWC,EAA1B,EAA0BA,OAA1B,OACvB,mCACGF,EAAWG,KAAI,YAAgD,IAA7CC,EAA4C,EAA5CA,GAAIC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,cAAetB,EAAW,EAAXA,KAClD,OACE,oBAAID,UAAU,mBAA4BwB,QAASL,EAAnD,SACE,qBACEM,IAAKH,EACLI,IAAKzB,EACL0B,WAAUJ,EACVvB,UAAU,yBACVwB,QAASN,KANyBG,UCK/BO,EAZM,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,aAAcX,EAAwB,EAAxBA,UAAWC,EAAa,EAAbA,OAC/C,OACE,oBAAInB,UAAU,eAAd,SACE,cAAC,EAAD,CACEiB,WAAYY,EACZX,UAAWA,EACXC,OAAQA,OCCDW,G,MARA,SAAC,GAAiB,IAAfN,EAAc,EAAdA,QAChB,OACE,wBAAQvB,KAAK,SAASD,UAAU,SAASwB,QAAS,kBAAMA,KAAxD,yB,yBCQWO,G,MARC,WACd,OACE,qBAAK/B,UAAU,kBAAf,SACE,cAAC,IAAD,CAAQC,KAAK,YAAY+B,MAAM,OAAOC,OAAQ,GAAIC,MAAO,SCJzDC,G,MAAYC,SAASC,cAAc,gBAuC1BC,E,4MApCblD,MAAQ,CACNmD,IAAK,I,EAWPC,cAAgB,SAAAjD,GACC,WAAXA,EAAEkD,MACJ,EAAK5C,MAAM6C,c,EAIfC,cAAgB,SAAApD,GACVA,EAAEqD,SAAWrD,EAAEE,eACjB,EAAKI,MAAM6C,c,uDAhBf,WACEG,OAAOC,iBAAiB,UAAW/C,KAAKyC,iB,kCAG1C,WACEK,OAAOE,oBAAoB,UAAWhD,KAAKyC,iB,oBAe7C,WACE,OAAOQ,uBACL,qBAAKhD,UAAU,UAAUwB,QAASzB,KAAK4C,cAAvC,SACE,qBAAK3C,UAAU,QAAf,SACE,qBAAKyB,IAAK1B,KAAKF,MAAMoD,aAAcvB,IAAI,SAG3CS,O,GAhCc7B,aCkGL4C,E,4MA9Fb9D,MAAQ,CACN+D,SAAU,GACV3C,YAAa,GACbC,KAAM,EACN2C,WAAW,EACXlC,WAAW,EACXqB,IAAK,I,EASPc,kBAAoB,SAAAhE,GAClB,EAAKG,SAAS,CACZgB,YAAanB,EACb8D,SAAU,GACV1C,KAAM,EACN2C,WAAW,K,EAIf7C,cAAgB,WACd+C,QAAQC,IAAI,SADQ,MAEU,EAAKnE,MAC7BoE,EAAU,CACdhD,YAJkB,EAEZA,YAGNC,KALkB,EAECA,MAMrB,EAAKjB,SAAS,CACZ4D,WAAW,IAGb7C,EAAciD,GACX3C,MAAK,SAAAE,GACJ,EAAKvB,UAAS,SAAAiE,GAAS,MAAK,CAC1BN,SAAS,GAAD,mBAAMM,EAAUN,UAAhB,YAA6BpC,IACrCN,KAAMgD,EAAUhD,KAAO,MAErB,EAAKrB,MAAMqB,KAAO,GACpBoC,OAAOa,SAAS,CACdC,IAAKvB,SAASwB,gBAAgBC,aAC9BC,SAAU,cAIfC,SAAQ,kBACP,EAAKvE,SAAS,CACZ4D,WAAW,Q,EAKnBY,iBAAmB,SAAAzE,GACjB+D,QAAQW,IAAI1E,EAAEqD,OAAOsB,QAAQC,KAC7B,EAAK3E,SAAS,CACZ+C,IAAKhD,EAAEqD,OAAOsB,QAAQC,O,EAI1BC,YAAc,SAAA7E,GACZ,EAAKC,UAAS,kBAAoB,CAChC0B,WADY,EAAGA,e,wDAvDnB,SAAmBmD,EAAWZ,GACxBA,EAAUjD,cAAgBT,KAAKX,MAAMoB,aACvCT,KAAKQ,kB,oBA0DT,WAAU,IAAD,EACyCR,KAAKX,MAA7C+D,EADD,EACCA,SAAUC,EADX,EACWA,UAAWlC,EADtB,EACsBA,UAAWqB,EADjC,EACiCA,IAClC+B,EAA2BnB,EAASoB,OAAS,IAAMnB,EAEzD,OACE,qCACE,cAAC,EAAD,CAAWtD,SAAUC,KAAKsD,oBAC1B,cAAC,EAAD,CACExB,aAAcsB,EACdjC,UAAWnB,KAAKqE,YAChBjD,OAAQpB,KAAKiE,mBAGdM,GAA4B,cAAC,EAAD,CAAQ9C,QAASzB,KAAKQ,gBAElD6C,GAAa,cAAC,EAAD,IAEblC,GACC,cAAC,EAAD,CAAOwB,WAAY3C,KAAKqE,YAAanB,aAAcV,W,GAxF3CjC,a,MCJlBkE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFtC,SAASuC,eAAe,W","file":"static/js/main.be5edcc6.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Searchbar.scss';\r\n\r\nclass Searchbar extends Component {\r\n  state = { query: '' };\r\n\r\n  handleInputChange = e => {\r\n    this.setState({\r\n      query: e.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state.query);\r\n    this.setState({\r\n      query: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { query } = this.state;\r\n\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            value={query}\r\n            onChange={this.handleInputChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbar;\r\n","import axios from 'axios';\r\n\r\nconst key = '20332919-ce65cd39cf390118f4ce6de3e';\r\n\r\nconst fetchPictures = ({ searchQuery = '', page = 1, pageSize = 12 }) => {\r\n  return axios\r\n    .get(\r\n      `https://pixabay.com/api/?q=${searchQuery}&page=${page}&key=${key}&image_type=photo&orientation=horizontal&per_page=${pageSize}`,\r\n    )\r\n    .then(({ data }) => data.hits);\r\n};\r\n\r\nexport default fetchPictures;\r\n","import React from 'react';\r\nimport './ImageGalleryItem.scss';\r\n\r\nconst show = e => {\r\n  console.log(e.currentTarget);\r\n};\r\n\r\nconst ImageGalleryItem = ({ dataRender, showModal, setUrl }) => (\r\n  <>\r\n    {dataRender.map(({ id, webformatURL, largeImageURL, type }) => {\r\n      return (\r\n        <li className=\"ImageGalleryItem\" key={id} onClick={setUrl}>\r\n          <img\r\n            src={webformatURL}\r\n            alt={type}\r\n            data-big={largeImageURL}\r\n            className=\"ImageGalleryItem-image\"\r\n            onClick={showModal}\r\n          />\r\n        </li>\r\n      );\r\n    })}\r\n  </>\r\n);\r\n\r\nexport default ImageGalleryItem;\r\n","import React from 'react';\r\nimport './ImageGallery.scss';\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\n\r\nconst ImageGallery = ({ picturesData, showModal, setUrl }) => {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      <ImageGalleryItem\r\n        dataRender={picturesData}\r\n        showModal={showModal}\r\n        setUrl={setUrl}\r\n      />\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ImageGallery;\r\n","import React from 'react';\r\nimport './Button.scss';\r\n\r\nconst Button = ({ onClick }) => {\r\n  return (\r\n    <button type=\"button\" className=\"Button\" onClick={() => onClick()}>\r\n      Load more\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport Loader from 'react-loader-spinner';\r\nimport React from 'react';\r\nimport './Spinner.scss';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"Spinner-wrapper\">\r\n      <Loader type=\"ThreeDots\" color=\"pink\" height={40} width={80} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport './Modal.scss';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nclass Modal extends Component {\r\n  state = {\r\n    url: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeydown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeydown);\r\n  }\r\n\r\n  handleKeydown = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.modalClose();\r\n    }\r\n  };\r\n\r\n  handleOverlay = e => {\r\n    if (e.target === e.currentTarget) {\r\n      this.props.modalClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.handleOverlay}>\r\n        <div className=\"Modal\">\r\n          <img src={this.props.modalPicture} alt=\"\" />\r\n        </div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import React, { Component } from 'react';\nimport Searchbar from './components/Searchbar';\nimport axios from 'axios';\nimport fetchPictures from './service/fetchApi';\nimport ImageGallery from './components/ImageGallery';\nimport Button from './components/Button';\nimport Spinner from './components/Spinner';\nimport Modal from './components/Modal';\n\nclass App extends Component {\n  state = {\n    pictures: [],\n    searchQuery: '',\n    page: 1,\n    isLoading: false,\n    showModal: false,\n    url: '',\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchQuery !== this.state.searchQuery) {\n      this.fetchPictures();\n    }\n  }\n\n  searchQueryChange = query => {\n    this.setState({\n      searchQuery: query,\n      pictures: [],\n      page: 1,\n      isLoading: false,\n    });\n  };\n\n  fetchPictures = () => {\n    console.log('fetch');\n    const { searchQuery, page } = this.state;\n    const options = {\n      searchQuery,\n      page,\n    };\n\n    this.setState({\n      isLoading: true,\n    });\n\n    fetchPictures(options)\n      .then(hits => {\n        this.setState(prevState => ({\n          pictures: [...prevState.pictures, ...hits],\n          page: prevState.page + 1,\n        }));\n        if (this.state.page > 2) {\n          window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: 'smooth',\n          });\n        }\n      })\n      .finally(() =>\n        this.setState({\n          isLoading: false,\n        }),\n      );\n  };\n\n  setBigPictureUrl = e => {\n    console.dir(e.target.dataset.big);\n    this.setState({\n      url: e.target.dataset.big,\n    });\n  };\n\n  toggleModal = e => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  render() {\n    const { pictures, isLoading, showModal, url } = this.state;\n    const shouldRenederLoadMoreBtn = pictures.length > 0 && !isLoading;\n\n    return (\n      <>\n        <Searchbar onSubmit={this.searchQueryChange} />\n        <ImageGallery\n          picturesData={pictures}\n          showModal={this.toggleModal}\n          setUrl={this.setBigPictureUrl}\n        />\n\n        {shouldRenederLoadMoreBtn && <Button onClick={this.fetchPictures} />}\n\n        {isLoading && <Spinner />}\n\n        {showModal && (\n          <Modal modalClose={this.toggleModal} modalPicture={url} />\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}